{
    "qrapp": {
        "title": "QRapp",
        "description": "QRapp is all about making QR code hunting fun and social! You can collect codes, compete with friends for top spots on various leaderboards, or just enjoy spotting codes everywhere you go. Whether you're into casual collecting or serious competition, there's something here for you.",
        "images": ["qrapp1.jpg", "qrapp2.jpg", "qrapp7.jpg", "qrapp4.jpg", "qrapp5.jpg"],
        "videos": ["QRAPP.webm"],
        "technologies": {
            "Android Studio": "Used for frontend development and connecting to the backend.",
            "Figma": "For designing wireframes and storyboards.",
            "Firebase": "Handles data storage and management.",
            "Java": "The programming language used.",
            "Google Maps API": "Manages location data.",
            "GitHub": "Used for version control, documentation, and task management."
        },
        "contributions": [
            "Documented all work on GitHub and the GitHub wiki.",
            "Kept minutes for all meetings.",
            "Designed storyboards for use cases and user experiences.",
            "Developed the map feature, including its UI/UX design.",
            "Integrated Google Maps API.",
            "Developed the ranking system and leaderboard pages.",
            "Planned and set up app layout and navigation."
        ],
        "bestFeatures": "The app's user interface and performance are top-notch. We put a lot of effort into making it visually appealing and engaging. It's definitely one of the most beautifully designed apps I've worked on.",
        "rating": 4.0,
        "codeUrl": "https://github.com/Byvalvin/QRAPP"
    },

    "aranimal": {
        "title": "AR Animal Identification",
        "description": "This app is part of a project by Aquatic Biosphere, aimed at raising awareness and funds for the Albertan Biosphere. It pairs with a vinyl sticker showcasing local organisms. Users can identify and learn about these creatures through interactive games and activities. The app also features easy customization for admins to update information.",
        "images": ["aranimal1.jpg", "aranimal3.jpg", "aranimal4.jpg", "aranimal5.jpg", "aranimal6.jpg"],
        "videos": ["ARANIMAL.webm"],
        "technologies": {
            "Android Studio": "IDE for development.",
            "Figma": "Used for wireframing and storyboarding.",
            "Flutter": "For frontend development and connecting to the backend.",
            "FastAPI": "Creates API endpoints for image recognition and database interactions.",
            "PostgreSQL": "Data storage and management.",
            "OpenCV": "For image processing and identification.",
            "Poetry": "Manages project dependencies.",
            "Cybera": "Provides cloud infrastructure and services.",
            "Uvicorn": "Serves and deploys APIs for image recognition and user interactions.",
            "GitHub": "Handles version control, documentation, and task management.",
            "VuePress": "Used for creating a website with full project documentation."
        },
        "contributions": [
            "Documented work on GitHub and VuePress.",
            "Took meeting minutes and kept documentation.",
            "Designed use cases and user experiences.",
            "Developed image recognition with OpenCV and integrated it into the app.",
            "Optimized image processing.",
            "Designed and planned games and activities.",
            "Created game-related pages and control logic.",
            "Set up the admin page."
        ],
        "bestFeatures": "The app’s cross-platform compatibility is a highlight. It works well on various devices, including older phones, and is accessible on both Android and iOS. It’s all about making the app as inclusive as possible.",
        "rating": 4.2,
        "codeUrl": "https://github.com/Byvalvin/AR-Animal-Identification",
        "tryItOutUrl":"https://github.com/Byvalvin/AR-Animal-Identification/releases"
    },

    "proquest": {
        "title": "ProQuest",
        "description": "ProQuest helps agents find the best teams and scouts find top players. Users can add players and teams, track performance, and test out different tactics in the planner. It’s all about showcasing talent and strategic planning.",
        "images": ["proquest1.png", "proquest2.png", "proquest3.png"],
        "videos": ["proquest.mp4"],
        "technologies": {
            "Visual Studio Code": "IDE for coding.",
            "Figma": "Used for wireframing, prototyping, and storyboarding.",
            "TailwindCSS": "A CSS framework for styling and design.",
            "Vite": "A build tool for setting up React projects.",
            "React": "JavaScript library for building user interfaces.",
            "Express": "Backend framework for Node.js.",
            "MongoDB": "NoSQL database for managing data.",
            "Javascript": "The programming language used.",
            "Node": "Runtime environment for executing JavaScript outside the browser.",
            "npm": "Package manager for Node.js.",
            "Render": "Cloud platform for serving and deploying APIs.",
            "Netlify": "Deploys frontend applications and manages web projects.",
            "GitHub": "Version control for source code, documentation, and task management."
        },
        "contributions": [
            "Solo"
        ],
        "bestFeatures": "I'm proud of several features: the multi-filtration system on the Players Page, dynamic CSS for different screen sizes, and the planner page where users can create and share their team setups. The planner page, in particular, offers a lot of fun and customization options.",
        "rating": 4.7,
        "codeUrl": "https://github.com/Byvalvin/proquest",
        "tryItOutUrl":"https://github.com/Byvalvin/proquest/blob/main/README.md"
    },

    "pawnspath": {
        "title": "Pawn’s Path: An Endgame Forge",
        "description": "A tactical chess playground designed to help players hone their skills by focusing on endgame scenarios. Players can learn, practice, and play. The game is built with a minimalist style to focus on the strategy and decisions behind each move.",
        "images": ["pawnspath1.jpg"],
        "videos": [],
        "technologies": {
            "Unity": "Chess GUI and other Graphics and UI related elements",
            "C#": "Business Logic, Algorithms and Data processing",
            "Python": "Data processing and preparation",
            "Selenium":"Web scraping master - grandmaster chess games",
            "Pytorch": "Training RL/ML models for bots",
            "draw":"Creating sprites and other assets",
            "GitHub": "Used for version control and project management."
        },
        "contributions": [
            "Solo"
        ],
        "bestFeatures": "Pawn's Path focuses on endgame mastery with a variety of challenges, from defensive to offensive strategies. Key features include customizable endgame setups, the ability to challenge different types of bots, multiplayer support for competitive play, and the minimalist interface that keeps players focused on strategy. The endgame scenarios are highly diverse and cater to both beginner and advanced players.",
        "rating": 4.1,
        "codeUrl": "https://github.com/Byvalvin/Chess-Unity",
        "tryItOutUrl": "projects/pawnspath/ChessUnity.html"
    },

    "chop": {
        "title": "Chop",
        "description": "Chop is a personal, cultural project and food archive that showcases African and Afro-Caribbean cuisine through a clean and engaging frontend. Users can browse, search, filter, and explore a variety of recipes by category, nation, or ingredients — all with the goal of celebrating the food that often goes unseen in mainstream recipe apps.",
        "images": ["chop1.png"], 
        "videos": [],
        "technologies": {
            "Visual Studio Code": "IDE for development.",
            "TailwindCSS": "Utility-first CSS framework used for styling the frontend.",
            "Vercel": "Hosting and deployment platform used to launch the frontend.",
            "NextJS": "React framework for building optimized frontend pages with routing.",
            "Javascript": "Used to implement functionality and dynamic behavior.",
            "Node": "Used in the tooling and build process (via Next.js and npm).",
            "npm": "Package manager used to manage frontend dependencies."
        },
        "contributions": [
            "Solo"
        ],
        "bestFeatures": "Some highlights include the cultural storytelling on the About page, a clean layout for browsing and searching recipes, and the ability to filter recipes by nation or category. The design leans into warmth and personal heritage while remaining user-friendly. Planned features like PDF downloads and a sitemap make the platform more useful and navigable.",
        "rating": 4.6,
        "codeUrl": "https://github.com/Byvalvin/chop",
        "tryItOutUrl": "https://chop-xi.vercel.app/"
    },

   "slate": {
        "title": "Slate: Your Personal Fitness Guide",
        "description": "A mobile app that acts as a Personal Guide, Progress Tracker, and Accountability Partner that empowers users to create personalized fitness programs tailored to their goals.",
        "images": ["slate2.jpg", "slate3.jpg", "slate4.jpg", "slate5.jpg"],
        "videos": [],
        "technologies": {
            "React Native": "Handles UI components and overall mobile application interface.",
            "Typescript": "Frontend; Manages business logic, algorithms, and data processing.",
            "Javascript": "Backend; Used for additional data handling and integration logic.",
            "Expo": "Framework used for app development and deployment.",
            "Express": "Manages server-side logic and API endpoints.",
            "MongoDB": "Stores user profiles, fitness plans, and progress data.",
            "Node": "Runtime environment for executing JavaScript outside the browser.",
            "npm": "Package manager for Node.js.",
            "Visual Studio Code": "Primary development environment for coding and version control.",
            "Vercel": "Used for hosting front-end services and deployments.",
            "OpenAI": "Powers intelligent features like chat support or personalized suggestions.",
            "Stripe": "Handles secure payment processing for premium features.",
            "GoogleAPIs": "Google OAuth2 Integration.",
            "GitHub": "Used for version control and project collaboration."
        },
        "contributions": [
            "Backend Setup and Management",
            "Integration with Google Cloud Services",
            "Deployment Strategy and Management"
        ],
        "bestFeatures": "Enables anyone to build a personalized fitness plan, helping users stay motivated, track their progress, and achieve their health goals.",
        "rating": 4.3,
        "codeUrl": "https://github.com/Byvalvin/SLATE-APP",
        "tryItOutUrl": "https://github.com/Byvalvin/SLATE-APP/releases"
    }

}
